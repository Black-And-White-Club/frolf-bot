# Leaderboard-related queries
extend type Query {
  getLeaderboard: Leaderboard!
  getUserTag(discordID: ID!): TagNumber # Query to get a specific user's tag by discordID
}

type Leaderboard {
  users: [User!]! # Using the shared User type
  placements: [TagNumber!]!
}

type TagNumber {
  tagNumber: Int # The rank or tag number
  lastPlayed: String! # Timestamp of the last played round
  durationHeld: Int! # Duration in days the tag has been held
  name: String! # Name of the user (from Discord)
}

# Mutation to update leaderboard
extend type Mutation {
  updateTag(discordID: ID!, tagNumber: Int!): TagNumber! # Update a user's tag
  receiveScores(scores: [ScoreInput!]!): Leaderboard! # Receive scores and update leaderboard
}

input ScoreInput {
  score: Int!
  tagNumber: Int # Tag number associated with the user
}
