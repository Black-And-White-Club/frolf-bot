# Additional types for handling scores and logs
type Score @key(fields: "discordID") {
  discordID: String!
  score: Int!
  tagNumber: Int
}

# Query type for fetching scores
type Query {
  getUserScore(discordID: String!, roundID: String!): Score!
  getScoresForRound(roundID: String!): [Score!]!
}

# Updated mutation for processing scores
type Mutation {
  updateScore(
    roundID: ID!
    discordID: String!
    score: Int!
    tagNumber: Int
  ): Score!

  processScores(input: ProcessScoresInput!): [Score!]!
}

# Input type for processing scores
input ProcessScoresInput {
  roundID: ID!
  scores: [ScoreInput!]!
}

# Input type for score details
input ScoreInput {
  discordID: String!
  score: Int!
  tagNumber: Int
}
