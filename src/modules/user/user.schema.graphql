# User-related types, queries, and mutations
type Query {
  getUser(discordID: String!): User
}

type Mutation {
  createUser(input: UserInput!): CreateUserResponse!
  updateUser(input: UpdateUserInput!): UpdateUserResponse!
}

# User type definition
type User @key(fields: "discordID") {
  name: String!
  discordID: String!
  role: UserRole!
  tagNumber: Int
  createdAt: String!
  updatedAt: String!
  deletedAt: String
}

# Input types for creating and updating users
input UserInput {
  name: String!
  discordID: String!
  tagNumber: Int
}

input UpdateUserInput {
  discordID: String
  name: String
  tagNumber: Int
  role: UserRole
}

# Enum for user roles
enum UserRole {
  ADMIN
  EDITOR
  RATTLER
}

# Response types for mutations
type CreateUserResponse {
  success: Boolean!
  user: User
  error: String
}

type UpdateUserResponse {
  success: Boolean!
  user: User
  error: String
}
