# Leaderboard-related queries
extend type Query {
  getLeaderboard(page: Int, limit: Int): Leaderboard! # Pagination for the leaderboard
  getUserTag(discordID: ID!): TagNumber # Query to get a specific user's tag by discordID
}

type Leaderboard {
  users: [User!]! # Using the shared User type
  placements: [TagNumber!]! # List of tag numbers with associated data
}

type TagNumber {
  tagNumber: Int! # The rank or tag number
  lastPlayed: String! # Timestamp of the last played round
  durationHeld: Int! # Duration in days the tag has been held
  discordID: ID! # Include discordID for reference
}

# Mutation to update leaderboard
extend type Mutation {
  updateTag(discordID: ID!, tagNumber: Int!): TagNumber! # Update a user's tag
  receiveScores(scores: [ScoreData!]!): Leaderboard! # Receive scores from the score module and update leaderboard
  manualTagUpdate(discordID: ID!, newTagNumber: Int!): TagNumber! # Admin or Editor can manually update a user's tag
  linkTag(discordID: ID!, newTagNumber: Int!): TagNumber! # Link a new tag to a Discord ID
}

# New input type to represent the scores being passed in
input ScoreData {
  score: Int! # The score achieved by the user
  discordID: ID! # The user's Discord ID associated with the score
  tagNumber: Int # The current tag number associated with the user (optional)
}
