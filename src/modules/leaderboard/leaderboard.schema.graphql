# Leaderboard-related queries
type Query {
  getLeaderboard: Leaderboard!
  getUserTag(discordID: ID!): TagNumber
}

type Leaderboard @key(fields: "leaderboardData { discordID tagNumber }") {
  leaderboardData: [LeaderboardEntry!]!
}

type LeaderboardEntry {
  discordID: ID!
  tagNumber: Int!
}

type TagNumber {
  tagNumber: Int!
  lastPlayed: String!
  durationHeld: Int!
  discordID: ID!
}

# Mutation to update leaderboard
type Mutation {
  updateTag(discordID: ID!, tagNumber: Int!): TagNumber!
  receiveScores(scores: [ScoreData!]!): Leaderboard!
}

# New input type to represent the scores being passed in
input ScoreData {
  score: Int! # The score achieved by the user
  discordID: ID! # The user's Discord ID associated with the score
  tagNumber: Int # The current tag number associated with the user (optional)
}
